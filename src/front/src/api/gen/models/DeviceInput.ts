/* tslint:disable */
/* eslint-disable */
/**
 * Domotique API
 * API documentation for the Domotique website.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Data for both INSERT and UPDATE operations on a device.
 * @export
 * @interface DeviceInput
 */
export interface DeviceInput {
    /**
     * 
     * @type {number}
     * @memberof DeviceInput
     */
    energyConsumption: number;
    /**
     * 
     * @type {boolean}
     * @memberof DeviceInput
     */
    powered: boolean;
    /**
     * 
     * @type {string}
     * @memberof DeviceInput
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof DeviceInput
     */
    description: string;
    /**
     * 
     * @type {number}
     * @memberof DeviceInput
     */
    typeId: number;
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof DeviceInput
     */
    attributes: { [key: string]: object; };
    /**
     * 
     * @type {number}
     * @memberof DeviceInput
     */
    roomId: number;
}

/**
 * Check if a given object implements the DeviceInput interface.
 */
export function instanceOfDeviceInput(value: object): value is DeviceInput {
    if (!('energyConsumption' in value) || value['energyConsumption'] === undefined) return false;
    if (!('powered' in value) || value['powered'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('typeId' in value) || value['typeId'] === undefined) return false;
    if (!('attributes' in value) || value['attributes'] === undefined) return false;
    if (!('roomId' in value) || value['roomId'] === undefined) return false;
    return true;
}

export function DeviceInputFromJSON(json: any): DeviceInput {
    return DeviceInputFromJSONTyped(json, false);
}

export function DeviceInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeviceInput {
    if (json == null) {
        return json;
    }
    return {
        
        'energyConsumption': json['energyConsumption'],
        'powered': json['powered'],
        'name': json['name'],
        'description': json['description'],
        'typeId': json['typeId'],
        'attributes': json['attributes'],
        'roomId': json['roomId'],
    };
}

export function DeviceInputToJSON(json: any): DeviceInput {
    return DeviceInputToJSONTyped(json, false);
}

export function DeviceInputToJSONTyped(value?: DeviceInput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'energyConsumption': value['energyConsumption'],
        'powered': value['powered'],
        'name': value['name'],
        'description': value['description'],
        'typeId': value['typeId'],
        'attributes': value['attributes'],
        'roomId': value['roomId'],
    };
}

