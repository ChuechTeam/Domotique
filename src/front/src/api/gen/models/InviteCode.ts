/* tslint:disable */
/* eslint-disable */
/**
 * Domotique API
 * API documentation for the Domotique website.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Role } from './Role';
import {
    RoleFromJSON,
    RoleFromJSONTyped,
    RoleToJSON,
    RoleToJSONTyped,
} from './Role';

/**
 * 
 * @export
 * @interface InviteCode
 */
export interface InviteCode {
    /**
     * 
     * @type {Date}
     * @memberof InviteCode
     */
    createdAt: Date;
    /**
     * 
     * @type {Role}
     * @memberof InviteCode
     */
    role: Role;
    /**
     * 
     * @type {number}
     * @memberof InviteCode
     */
    creatorId: number;
    /**
     * 
     * @type {string}
     * @memberof InviteCode
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof InviteCode
     */
    usagesLeft: number;
}



/**
 * Check if a given object implements the InviteCode interface.
 */
export function instanceOfInviteCode(value: object): value is InviteCode {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    if (!('creatorId' in value) || value['creatorId'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('usagesLeft' in value) || value['usagesLeft'] === undefined) return false;
    return true;
}

export function InviteCodeFromJSON(json: any): InviteCode {
    return InviteCodeFromJSONTyped(json, false);
}

export function InviteCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): InviteCode {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['createdAt'])),
        'role': RoleFromJSON(json['role']),
        'creatorId': json['creatorId'],
        'id': json['id'],
        'usagesLeft': json['usagesLeft'],
    };
}

export function InviteCodeToJSON(json: any): InviteCode {
    return InviteCodeToJSONTyped(json, false);
}

export function InviteCodeToJSONTyped(value?: InviteCode | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'createdAt': ((value['createdAt']).toISOString()),
        'role': RoleToJSON(value['role']),
        'creatorId': value['creatorId'],
        'id': value['id'],
        'usagesLeft': value['usagesLeft'],
    };
}

