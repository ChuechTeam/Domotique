/* tslint:disable */
/* eslint-disable */
/**
 * Domotique API
 * API documentation for the Domotique website.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LoginLog } from './LoginLog';
import {
    LoginLogFromJSON,
    LoginLogFromJSONTyped,
    LoginLogToJSON,
    LoginLogToJSONTyped,
} from './LoginLog';
import type { UserProfile } from './UserProfile';
import {
    UserProfileFromJSON,
    UserProfileFromJSONTyped,
    UserProfileToJSON,
    UserProfileToJSONTyped,
} from './UserProfile';

/**
 * 
 * @export
 * @interface LoginLogsResponse
 */
export interface LoginLogsResponse {
    /**
     * 
     * @type {Array<LoginLog>}
     * @memberof LoginLogsResponse
     */
    logs: Array<LoginLog>;
    /**
     * 
     * @type {Array<UserProfile>}
     * @memberof LoginLogsResponse
     */
    users: Array<UserProfile>;
}

/**
 * Check if a given object implements the LoginLogsResponse interface.
 */
export function instanceOfLoginLogsResponse(value: object): value is LoginLogsResponse {
    if (!('logs' in value) || value['logs'] === undefined) return false;
    if (!('users' in value) || value['users'] === undefined) return false;
    return true;
}

export function LoginLogsResponseFromJSON(json: any): LoginLogsResponse {
    return LoginLogsResponseFromJSONTyped(json, false);
}

export function LoginLogsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LoginLogsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'logs': ((json['logs'] as Array<any>).map(LoginLogFromJSON)),
        'users': ((json['users'] as Array<any>).map(UserProfileFromJSON)),
    };
}

export function LoginLogsResponseToJSON(json: any): LoginLogsResponse {
    return LoginLogsResponseToJSONTyped(json, false);
}

export function LoginLogsResponseToJSONTyped(value?: LoginLogsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'logs': ((value['logs'] as Array<any>).map(LoginLogToJSON)),
        'users': ((value['users'] as Array<any>).map(UserProfileToJSON)),
    };
}

