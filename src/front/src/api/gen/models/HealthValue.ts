/* tslint:disable */
/* eslint-disable */
/**
 * Domotique API
 * API documentation for the Domotique website.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HealthStatus } from './HealthStatus';
import {
    HealthStatusFromJSON,
    HealthStatusFromJSONTyped,
    HealthStatusToJSON,
    HealthStatusToJSONTyped,
} from './HealthStatus';
import type { AttributeRange } from './AttributeRange';
import {
    AttributeRangeFromJSON,
    AttributeRangeFromJSONTyped,
    AttributeRangeToJSON,
    AttributeRangeToJSONTyped,
} from './AttributeRange';

/**
 * 
 * @export
 * @interface HealthValue
 */
export interface HealthValue {
    /**
     * 
     * @type {Array<number>}
     * @memberof HealthValue
     */
    deviceIds: Array<number>;
    /**
     * 
     * @type {AttributeRange}
     * @memberof HealthValue
     */
    range: AttributeRange;
    /**
     * 
     * @type {object}
     * @memberof HealthValue
     */
    value: object;
    /**
     * 
     * @type {HealthStatus}
     * @memberof HealthValue
     */
    status: HealthStatus;
}



/**
 * Check if a given object implements the HealthValue interface.
 */
export function instanceOfHealthValue(value: object): value is HealthValue {
    if (!('deviceIds' in value) || value['deviceIds'] === undefined) return false;
    if (!('range' in value) || value['range'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function HealthValueFromJSON(json: any): HealthValue {
    return HealthValueFromJSONTyped(json, false);
}

export function HealthValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): HealthValue {
    if (json == null) {
        return json;
    }
    return {
        
        'deviceIds': json['deviceIds'],
        'range': AttributeRangeFromJSON(json['range']),
        'value': json['value'],
        'status': HealthStatusFromJSON(json['status']),
    };
}

export function HealthValueToJSON(json: any): HealthValue {
    return HealthValueToJSONTyped(json, false);
}

export function HealthValueToJSONTyped(value?: HealthValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'deviceIds': value['deviceIds'],
        'range': AttributeRangeToJSON(value['range']),
        'value': value['value'],
        'status': HealthStatusToJSON(value['status']),
    };
}

