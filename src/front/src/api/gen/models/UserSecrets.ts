/* tslint:disable */
/* eslint-disable */
/**
 * Domotique API
 * API documentation for the Domotique website.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * All confidential information only the user account's owner can see, or an admin.
 * @export
 * @interface UserSecrets
 */
export interface UserSecrets {
    /**
     * True when this user's email has been confirmed.
     * @type {boolean}
     * @memberof UserSecrets
     */
    emailConfirmed: boolean;
    /**
     * The email address of the user. Must be unique. Is used to log in.
     * @type {string}
     * @memberof UserSecrets
     */
    email: string;
    /**
     * The amount of points the user has accumulated. Never negative.
     * @type {number}
     * @memberof UserSecrets
     */
    points: number;
}

/**
 * Check if a given object implements the UserSecrets interface.
 */
export function instanceOfUserSecrets(value: object): value is UserSecrets {
    if (!('emailConfirmed' in value) || value['emailConfirmed'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('points' in value) || value['points'] === undefined) return false;
    return true;
}

export function UserSecretsFromJSON(json: any): UserSecrets {
    return UserSecretsFromJSONTyped(json, false);
}

export function UserSecretsFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSecrets {
    if (json == null) {
        return json;
    }
    return {
        
        'emailConfirmed': json['emailConfirmed'],
        'email': json['email'],
        'points': json['points'],
    };
}

export function UserSecretsToJSON(json: any): UserSecrets {
    return UserSecretsToJSONTyped(json, false);
}

export function UserSecretsToJSONTyped(value?: UserSecrets | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'emailConfirmed': value['emailConfirmed'],
        'email': value['email'],
        'points': value['points'],
    };
}

