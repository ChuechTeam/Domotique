/* tslint:disable */
/* eslint-disable */
/**
 * Domotique API
 * API documentation for the Domotique website.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CompleteDeviceType } from './CompleteDeviceType';
import {
    CompleteDeviceTypeFromJSON,
    CompleteDeviceTypeFromJSONTyped,
    CompleteDeviceTypeToJSON,
    CompleteDeviceTypeToJSONTyped,
} from './CompleteDeviceType';

/**
 * 
 * @export
 * @interface DeviceTypesResponse
 */
export interface DeviceTypesResponse {
    /**
     * 
     * @type {Array<CompleteDeviceType>}
     * @memberof DeviceTypesResponse
     */
    deviceTypes: Array<CompleteDeviceType>;
}

/**
 * Check if a given object implements the DeviceTypesResponse interface.
 */
export function instanceOfDeviceTypesResponse(value: object): value is DeviceTypesResponse {
    if (!('deviceTypes' in value) || value['deviceTypes'] === undefined) return false;
    return true;
}

export function DeviceTypesResponseFromJSON(json: any): DeviceTypesResponse {
    return DeviceTypesResponseFromJSONTyped(json, false);
}

export function DeviceTypesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeviceTypesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'deviceTypes': ((json['deviceTypes'] as Array<any>).map(CompleteDeviceTypeFromJSON)),
    };
}

export function DeviceTypesResponseToJSON(json: any): DeviceTypesResponse {
    return DeviceTypesResponseToJSONTyped(json, false);
}

export function DeviceTypesResponseToJSONTyped(value?: DeviceTypesResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'deviceTypes': ((value['deviceTypes'] as Array<any>).map(CompleteDeviceTypeToJSON)),
    };
}

